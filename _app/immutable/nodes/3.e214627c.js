import{S as ss,i as es,s as ns,y as V,z as O,A as H,g as R,d as q,B as M,k as c,a as S,l as i,m as u,h as l,c as B,b as U,q as G,r as T,n as d,R as ds,p as us,J as a,T as Q,U as cs,V as Z,W as ys,X as fs,Y as hs,H as Ds}from"../chunks/index.cd621e7a.js";import{F as ms,a as gs,b as Cs,L as is,E as vs}from"../chunks/Overlay.svelte_svelte_type_style_lang.1fb675a3.js";import{L as _s}from"../chunks/logo.2b71cccd.js";import{b as Es}from"../chunks/paths.96b3d3ca.js";const $s=async()=>({seo:{title:"The expressive Svelte localization library",description:"The expressive Svelte localization library"}}),Os=Object.freeze(Object.defineProperty({__proto__:null,load:$s},Symbol.toStringTag,{value:"Module"}));function bs(D){let s,n,e,o,r,y;return n=new is({props:{id:"hello-user",args:{userName:D[0]}}}),r=new is({props:{id:"shared-photos",args:{userName:D[0],userGender:D[1],photoCount:D[2]}}}),{c(){s=c("strong"),V(n.$$.fragment),e=S(),o=c("p"),V(r.$$.fragment)},l(t){s=i(t,"STRONG",{});var p=u(s);O(n.$$.fragment,p),p.forEach(l),e=B(t),o=i(t,"P",{});var $=u(o);O(r.$$.fragment,$),$.forEach(l)},m(t,p){U(t,s,p),H(n,s,null),U(t,e,p),U(t,o,p),H(r,o,null),y=!0},p(t,p){const $={};p&1&&($.args={userName:t[0]}),n.$set($);const h={};p&7&&(h.args={userName:t[0],userGender:t[1],photoCount:t[2]}),r.$set(h)},i(t){y||(R(n.$$.fragment,t),R(r.$$.fragment,t),y=!0)},o(t){q(n.$$.fragment,t),q(r.$$.fragment,t),y=!1},d(t){t&&l(s),M(n),t&&l(e),t&&l(o),M(r)}}}function Fs(D){let s,n;return s=new ms({props:{bundles:[D[3]],$$slots:{default:[bs]},$$scope:{ctx:D}}}),{c(){V(s.$$.fragment)},l(e){O(s.$$.fragment,e)},m(e,o){H(s,e,o),n=!0},p(e,[o]){const r={};o&39&&(r.$$scope={dirty:o,ctx:e}),s.$set(r)},i(e){n||(R(s.$$.fragment,e),n=!0)},o(e){q(s.$$.fragment,e),n=!1},d(e){M(s,e)}}}function ws(D,s,n){let{userName:e="Anna"}=s,{userGender:o="female"}=s,{photoCount:r=3}=s;const y=`
# Simple things are simple.
hello-user = Hello, {$userName}!

# Complex things are possible.
shared-photos =
    {$userName} {$photoCount ->
        [one] added a new photo
       *[other] added {$photoCount} new photos
    } to {$userGender ->
        [male] his stream
        [female] her stream
       *[other] their stream
    }.
`,t=new gs("en");return t.addResource(new Cs(y)),D.$$set=p=>{"userName"in p&&n(0,e=p.userName),"userGender"in p&&n(1,o=p.userGender),"photoCount"in p&&n(2,r=p.photoCount)},[e,o,r,t]}class Ns extends ss{constructor(s){super(),es(this,s,ws,Fs,ns,{userName:0,userGender:1,photoCount:2})}}const zs=`<pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #808080">&lt;</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">	</span><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> { </span><span style="color: #9CDCFE">FluentBundle</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">FluentResource</span><span style="color: #D4D4D4"> } </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&#39;@fluent/bundle&#39;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">	</span><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> { </span><span style="color: #9CDCFE">FluentProvider</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">Localized</span><span style="color: #D4D4D4"> } </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&#39;@nubolab-ffwd/svelte-fluent&#39;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">	</span><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">let</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">userName</span><span style="color: #D4D4D4"> = </span><span style="color: #CE9178">&#39;Anna&#39;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">	</span><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">let</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">userGender</span><span style="color: #D4D4D4"> = </span><span style="color: #CE9178">&#39;female&#39;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">	</span><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">let</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">photoCount</span><span style="color: #D4D4D4"> = </span><span style="color: #B5CEA8">3</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">	</span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">translations</span><span style="color: #D4D4D4"> = </span><span style="color: #CE9178">\`</span></span>
<span class="line"><span style="color: #CE9178"># Simple things are simple.</span></span>
<span class="line"><span style="color: #CE9178">hello-user = Hello, {$userName}!</span></span>
<span class="line"></span>
<span class="line"><span style="color: #CE9178"># Complex things are possible.</span></span>
<span class="line"><span style="color: #CE9178">shared-photos =</span></span>
<span class="line"><span style="color: #CE9178">    {$userName} {$photoCount -&gt;</span></span>
<span class="line"><span style="color: #CE9178">        [one] added a new photo</span></span>
<span class="line"><span style="color: #CE9178">       *[other] added {$photoCount} new photos</span></span>
<span class="line"><span style="color: #CE9178">    } to {$userGender -&gt;</span></span>
<span class="line"><span style="color: #CE9178">        [male] his stream</span></span>
<span class="line"><span style="color: #CE9178">        [female] her stream</span></span>
<span class="line"><span style="color: #CE9178">       *[other] their stream</span></span>
<span class="line"><span style="color: #CE9178">    }.</span></span>
<span class="line"><span style="color: #CE9178">\`</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">	</span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">bundle</span><span style="color: #D4D4D4"> = </span><span style="color: #569CD6">new</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">FluentBundle</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&#39;en&#39;</span><span style="color: #D4D4D4">);</span></span>
<span class="line"><span style="color: #D4D4D4">	</span><span style="color: #9CDCFE">bundle</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">addResource</span><span style="color: #D4D4D4">(</span><span style="color: #569CD6">new</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">FluentResource</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">translations</span><span style="color: #D4D4D4">));</span></span>
<span class="line"><span style="color: #808080">&lt;/</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #808080">&lt;</span><span style="color: #4EC9B0">FluentProvider</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">bundles</span><span style="color: #D4D4D4">=</span><span style="color: #569CD6">{</span><span style="color: #D4D4D4">[</span><span style="color: #9CDCFE">bundle</span><span style="color: #D4D4D4">]</span><span style="color: #569CD6">}</span><span style="color: #808080">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">	</span><span style="color: #808080">&lt;</span><span style="color: #569CD6">strong</span><span style="color: #808080">&gt;&lt;</span><span style="color: #4EC9B0">Localized</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">id</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;hello-user&quot;</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">args</span><span style="color: #D4D4D4">=</span><span style="color: #569CD6">{</span><span style="color: #D4D4D4">{ </span><span style="color: #9CDCFE">userName</span><span style="color: #D4D4D4"> }</span><span style="color: #569CD6">}</span><span style="color: #D4D4D4"> </span><span style="color: #808080">/&gt;&lt;/</span><span style="color: #569CD6">strong</span><span style="color: #808080">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">	</span><span style="color: #808080">&lt;</span><span style="color: #569CD6">p</span><span style="color: #808080">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">		</span><span style="color: #808080">&lt;</span><span style="color: #4EC9B0">Localized</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">id</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;shared-photos&quot;</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">args</span><span style="color: #D4D4D4">=</span><span style="color: #569CD6">{</span><span style="color: #D4D4D4">{ </span><span style="color: #9CDCFE">userName</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">userGender</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">photoCount</span><span style="color: #D4D4D4"> }</span><span style="color: #569CD6">}</span><span style="color: #D4D4D4"> </span><span style="color: #808080">/&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">	</span><span style="color: #808080">&lt;/</span><span style="color: #569CD6">p</span><span style="color: #808080">&gt;</span></span>
<span class="line"><span style="color: #808080">&lt;/</span><span style="color: #4EC9B0">FluentProvider</span><span style="color: #808080">&gt;</span></span>
<span class="line"></span></code></pre>`;function Gs(D){let s,n,e,o,r,y,t,p,$,h,_,F,w,m,x,N,C,P,v,E,g,A,f,L,I;return{c(){s=c("dl"),n=c("dt"),e=c("label"),o=G("userName"),r=c("dd"),y=c("input"),t=c("dt"),p=c("label"),$=G("userGender"),h=c("dd"),_=c("select"),F=c("option"),w=G("male"),m=c("option"),x=G("female"),N=c("option"),C=G("unspecified"),P=S(),v=c("dt"),E=c("label"),g=G("photoCount"),A=c("dd"),f=c("input"),this.h()},l(b){s=i(b,"DL",{slot:!0});var z=u(s);n=i(z,"DT",{});var W=u(n);e=i(W,"LABEL",{for:!0});var J=u(e);o=T(J,"userName"),J.forEach(l),W.forEach(l),r=i(z,"DD",{});var k=u(r);y=i(k,"INPUT",{id:!0,type:!0}),k.forEach(l),t=i(z,"DT",{});var X=u(t);p=i(X,"LABEL",{for:!0});var Y=u(p);$=T(Y,"userGender"),Y.forEach(l),X.forEach(l),h=i(z,"DD",{});var j=u(h);_=i(j,"SELECT",{id:!0});var K=u(_);F=i(K,"OPTION",{});var as=u(F);w=T(as,"male"),as.forEach(l),m=i(K,"OPTION",{});var ts=u(m);x=T(ts,"female"),ts.forEach(l),N=i(K,"OPTION",{});var ls=u(N);C=T(ls,"unspecified"),ls.forEach(l),K.forEach(l),P=B(j),j.forEach(l),v=i(z,"DT",{});var os=u(v);E=i(os,"LABEL",{for:!0});var rs=u(E);g=T(rs,"photoCount"),rs.forEach(l),os.forEach(l),A=i(z,"DD",{});var ps=u(A);f=i(ps,"INPUT",{id:!0,type:!0,min:!0,max:!0}),ps.forEach(l),z.forEach(l),this.h()},h(){d(e,"for","frontpage-username"),d(y,"id","frontpage-username"),d(y,"type","text"),d(p,"for","frontpage-usergender"),F.__value="male",F.value=F.__value,m.__value="female",m.value=m.__value,N.__value="unspecified",N.value=N.__value,d(_,"id","frontpage-usergender"),D[0].userGender===void 0&&ds(()=>D[2].call(_)),d(E,"for","frontpage-photocount"),d(f,"id","frontpage-photocount"),d(f,"type","range"),d(f,"min","1"),d(f,"max","9"),d(s,"slot","controls"),us(s,"--space","var(--s-2)")},m(b,z){U(b,s,z),a(s,n),a(n,e),a(e,o),a(s,r),a(r,y),Q(y,D[0].userName),a(s,t),a(t,p),a(p,$),a(s,h),a(h,_),a(_,F),a(F,w),a(_,m),a(m,x),a(_,N),a(N,C),cs(_,D[0].userGender,!0),a(h,P),a(s,v),a(v,E),a(E,g),a(s,A),a(A,f),Q(f,D[0].photoCount),L||(I=[Z(y,"input",D[1]),Z(_,"change",D[2]),Z(f,"change",D[3]),Z(f,"input",D[3])],L=!0)},p(b,z){z&1&&y.value!==b[0].userName&&Q(y,b[0].userName),z&1&&cs(_,b[0].userGender),z&1&&Q(f,b[0].photoCount)},d(b){b&&l(s),L=!1,ys(I)}}}function Ts(D){let s,n;return s=new vs({props:{sources:{"App.svelte":{code:zs,html:!0}},component:Ns,componentArgs:D[0],$$slots:{controls:[Gs]},$$scope:{ctx:D}}}),{c(){V(s.$$.fragment)},l(e){O(s.$$.fragment,e)},m(e,o){H(s,e,o),n=!0},p(e,[o]){const r={};o&1&&(r.componentArgs=e[0]),o&17&&(r.$$scope={dirty:o,ctx:e}),s.$set(r)},i(e){n||(R(s.$$.fragment,e),n=!0)},o(e){q(s.$$.fragment,e),n=!1},d(e){M(s,e)}}}function As(D,s,n){const e={userName:"Anna",userGender:"female",photoCount:3};function o(){e.userName=this.value,n(0,e)}function r(){e.userGender=fs(this),n(0,e)}function y(){e.photoCount=hs(this.value),n(0,e)}return[e,o,r,y]}class Ls extends ss{constructor(s){super(),es(this,s,As,Ts,ns,{})}}function Ps(D){let s,n,e,o,r,y,t,p,$,h,_,F,w,m,x,N,C,P,v,E,g,A;return g=new _s({}),{c(){s=c("div"),n=c("div"),e=c("div"),o=c("h1"),r=G("svelte-fluent"),y=S(),t=c("p"),p=G("The expressive Svelte localization library"),$=S(),h=c("p"),_=G("Describe translations with Mozilla's natural-sounding Fluent syntax"),F=S(),w=c("div"),m=c("a"),x=G("Get started"),N=S(),C=c("a"),P=G("View on GitHub"),v=S(),E=c("div"),V(g.$$.fragment),this.h()},l(f){s=i(f,"DIV",{class:!0});var L=u(s);n=i(L,"DIV",{class:!0});var I=u(n);e=i(I,"DIV",{});var b=u(e);o=i(b,"H1",{class:!0});var z=u(o);r=T(z,"svelte-fluent"),z.forEach(l),y=B(b),t=i(b,"P",{class:!0});var W=u(t);p=T(W,"The expressive Svelte localization library"),W.forEach(l),$=B(b),h=i(b,"P",{class:!0});var J=u(h);_=T(J,"Describe translations with Mozilla's natural-sounding Fluent syntax"),J.forEach(l),b.forEach(l),F=B(I),w=i(I,"DIV",{class:!0});var k=u(w);m=i(k,"A",{class:!0,href:!0});var X=u(m);x=T(X,"Get started"),X.forEach(l),N=B(k),C=i(k,"A",{class:!0,href:!0,target:!0,rel:!0});var Y=u(C);P=T(Y,"View on GitHub"),Y.forEach(l),k.forEach(l),I.forEach(l),v=B(L),E=i(L,"DIV",{class:!0});var j=u(E);O(g.$$.fragment,j),j.forEach(l),L.forEach(l),this.h()},h(){d(o,"class","svelte-5co0od"),d(t,"class","text svelte-5co0od"),d(h,"class","tagline svelte-5co0od"),d(m,"class","button primary"),d(m,"href",Es+"/docs/getting-started"),d(C,"class","button"),d(C,"href","https://github.com/nubolab-ffwd/svelte-fluent"),d(C,"target","_blank"),d(C,"rel","noopener noreferrer"),d(w,"class","buttons svelte-5co0od"),d(n,"class","stack"),d(E,"class","logo-wrapper svelte-5co0od"),d(s,"class","hero with-sidebar right wrap-reverse svelte-5co0od"),us(s,"--content-min","50%")},m(f,L){U(f,s,L),a(s,n),a(n,e),a(e,o),a(o,r),a(e,y),a(e,t),a(t,p),a(e,$),a(e,h),a(h,_),a(n,F),a(n,w),a(w,m),a(m,x),a(w,N),a(w,C),a(C,P),a(s,v),a(s,E),H(g,E,null),A=!0},p:Ds,i(f){A||(R(g.$$.fragment,f),A=!0)},o(f){q(g.$$.fragment,f),A=!1},d(f){f&&l(s),M(g)}}}class xs extends ss{constructor(s){super(),es(this,s,null,Ps,ns,{})}}function Ss(D){let s,n,e,o,r,y,t,p,$,h,_,F,w,m,x,N,C,P;return e=new xs({}),C=new Ls({}),{c(){s=c("div"),n=c("div"),V(e.$$.fragment),o=S(),r=c("p"),y=G(`With svelte-fluent, developers can focus on building the core functionality of their
			application while not standing in the way of translating it into multiple languages.`),t=S(),p=c("p"),$=G("Fluent is a "),h=c("a"),_=G("localization system developed by Mozilla"),F=G(` to address the limitations of traditional localization systems. They designed it to make it easier
			to create translations of software interfaces and content and to support more complex language
			structures than traditional localization systems can handle.`),w=S(),m=c("p"),x=G(`The example below shows how you can use svelte-fluent and FTL, the format for describing
			translation resources used by Fluent, to represent complex natural language concepts such as
			gender, plurals, and others that are important to many languages but difficult to handle with
			traditional localization systems.`),N=S(),V(C.$$.fragment),this.h()},l(v){s=i(v,"DIV",{class:!0});var E=u(s);n=i(E,"DIV",{class:!0});var g=u(n);O(e.$$.fragment,g),o=B(g),r=i(g,"P",{});var A=u(r);y=T(A,`With svelte-fluent, developers can focus on building the core functionality of their
			application while not standing in the way of translating it into multiple languages.`),A.forEach(l),t=B(g),p=i(g,"P",{});var f=u(p);$=T(f,"Fluent is a "),h=i(f,"A",{href:!0,target:!0,rel:!0});var L=u(h);_=T(L,"localization system developed by Mozilla"),L.forEach(l),F=T(f,` to address the limitations of traditional localization systems. They designed it to make it easier
			to create translations of software interfaces and content and to support more complex language
			structures than traditional localization systems can handle.`),f.forEach(l),w=B(g),m=i(g,"P",{});var I=u(m);x=T(I,`The example below shows how you can use svelte-fluent and FTL, the format for describing
			translation resources used by Fluent, to represent complex natural language concepts such as
			gender, plurals, and others that are important to many languages but difficult to handle with
			traditional localization systems.`),I.forEach(l),N=B(g),O(C.$$.fragment,g),g.forEach(l),E.forEach(l),this.h()},h(){d(h,"href","https://projectfluent.org/"),d(h,"target","_blank"),d(h,"rel","noopener noreferrer"),d(n,"class","stack"),d(s,"class","content center with-gutters svelte-39mgo9")},m(v,E){U(v,s,E),a(s,n),H(e,n,null),a(n,o),a(n,r),a(r,y),a(n,t),a(n,p),a(p,$),a(p,h),a(h,_),a(p,F),a(n,w),a(n,m),a(m,x),a(n,N),H(C,n,null),P=!0},p:Ds,i(v){P||(R(e.$$.fragment,v),R(C.$$.fragment,v),P=!0)},o(v){q(e.$$.fragment,v),q(C.$$.fragment,v),P=!1},d(v){v&&l(s),M(e),M(C)}}}class Hs extends ss{constructor(s){super(),es(this,s,null,Ss,ns,{})}}export{Hs as component,Os as universal};
